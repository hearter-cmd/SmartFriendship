server:
  address: 0.0.0.0
  port: 8101
  servlet:
    context-path: /api
    session:
      cookie:
        path: /
# 线上配置文件
spring:
  main:
    allow-bean-definition-overriding: true
  application:
    name: evaluation-server
  # 支持 swagger3
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher
  # session 配置
  session:
    store-type: redis
    # 30 天过期
    timeout: 604800
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://1.94.141.32:3306/intelligent
    username: root
    password: ${MYSQL_PASSWORD}
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      maximum-pool-size: 5
      max-lifetime: 800000
  # 文件上传
  servlet:
    multipart:
      # 大小限制
      max-file-size: 10MB
  data:
    redis:
      database: 1
      host: 1.94.141.32
      port: 6379
      timeout: 5000
      password: ${MYSQL_PASSWORD}
  jackson:
    serialization:
      write-dates-as-timestamps: true
#  shardingsphere:
#    mode:
#      type: Standalone
#    #数据源配置
#    datasource:
#      # 多数据源以逗号隔开即可
#      names: intelligent
#      intelligent:
#        type: com.zaxxer.hikari.HikariDataSource
#        driver-class-name: com.mysql.cj.jdbc.Driver
#        jdbc-url: jdbc:mysql://192.168.182.128:3306/intelligent
#        username: ${MYSQL_USERNAME:root}
#        password: ${MYSQL_PASSWORD}
#    # 规则配置
#    rules:
#      sharding:
#        tables:
#          user_answer:
#            actual-data-nodes: intelligent.user_answer_$->{0..1}
#            # 分表策略
#            table-strategy:
#              standard:
#                sharding-column: appId
#                sharding-algorithm-name: answer-table-inline
#        # 分片算法配置
#        sharding-algorithms:
#          # 自定义分片规则名
#          answer-table-inline:
#            ## inline 类型是简单的配置文件里面就能写的类型，其他还有自定义类等等
#            type: INLINE
#            props:
#              algorithm-expression: user_answer_$->{appId % 2}
#    props:
#      sql-show: true  # 显示SQL语句，方便调试和验证分表规则是否正确
#    enabled: true
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: false
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      logic-delete-field: isDelete # 全局逻辑删除的实体字段名
      logic-delete-value: 1 # 逻辑已删除值（默认为 1）
      logic-not-delete-value: 0 # 逻辑未删除值（默认为 0）
# 对象存储
cos:
  client:
    accessKey: ${COS_ACCESSKEY}
    secretKey: ${COS_SECRETKEY}
    region: ap-beijing
    bucket: part-one-1306321377
# 接口文档配置
knife4j:
  enable: true
  openapi:
    title: "接口文档"
    version: 1.0
    group:
      default:
        api-rule: package
        api-rule-resources:
          - com.yaonie.intelligent.assessment.server.springbootinit.controller
# AI 配置
ais:
  tag: true
  # 智普 AI
  zhi-pu:
    tag: true
    temperature: 0.95
    apiKey: ${ZHIPU_API_KEY}
# 获取IP地址所属地的工具
area:
  gaoDe:
    key: ${GAODE_KEY}
#logging:
#  level:
#    root: debug
#logging:
#  level:
#    org.springframework.web: INFO
#    com.github.binarywang.demo.wx.mp: DEBUG
#    me.chanjar.weixin: DEBUG
