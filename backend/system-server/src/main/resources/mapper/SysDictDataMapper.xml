<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yaonie.intelligent.assessment.system.mapper.SysDictDataMapper">

    <resultMap type="com.yaonie.intelligent.assessment.system.domain.entity.SysDictData" id="SysDictDataResult">
        <id property="dictCode" column="dictCode"/>
        <result property="dictSort" column="dictSort"/>
        <result property="dictLabel" column="dictLabel"/>
        <result property="dictValue" column="dictValue"/>
        <result property="dictType" column="dictType"/>
        <result property="cssClass" column="cssClass"/>
        <result property="listClass" column="listClass"/>
        <result property="isDefault" column="isDefault"/>
        <result property="status" column="status"/>
        <result property="createBy" column="createBy"/>
        <result property="createTime" column="createTime"/>
        <result property="updateBy" column="updateBy"/>
        <result property="updateTime" column="updateTime"/>
    </resultMap>

    <sql id="selectDictDataVo">
        select dictCode,
               dictSort,
               dictLabel,
               dictValue,
               dictType,
               cssClass,
               listClass,
               isDefault,
               status,
               createBy,
               createTime,
               remark
        from sys_dict_data
    </sql>

    <select id="selectDictDataList" parameterType="com.yaonie.intelligent.assessment.system.domain.entity.SysDictData"
            resultMap="SysDictDataResult">
        <include refid="selectDictDataVo"/>
        <where>
            <if test="dictType != null and dictType != ''">
                AND dictType = #{dictType}
            </if>
            <if test="dictLabel != null and dictLabel != ''">
                AND dictLabel like concat('%', #{dictLabel}, '%')
            </if>
            <if test="status != null and status != ''">
                AND status = #{status}
            </if>
        </where>
        order by dictSort asc
    </select>

    <select id="selectDictDataByType" parameterType="String" resultMap="SysDictDataResult">
        <include refid="selectDictDataVo"/>
        where status = '0' and dict_type = #{dictType} order by dict_sort asc
    </select>

    <select id="selectDictLabel" resultType="String">
        select dictLabel
        from sys_dict_data
        where dictType = #{dictType}
          and dictValue = #{dictValue}
    </select>

    <select id="selectDictDataById" parameterType="Long" resultMap="SysDictDataResult">
        <include refid="selectDictDataVo"/>
        where dict_code = #{dictCode}
    </select>

    <select id="countDictDataByType" resultType="Integer">
        select count(1)
        from sys_dict_data
        where dictType = #{dictType}
    </select>

    <delete id="deleteDictDataById" parameterType="Long">
        delete
        from sys_dict_data
        where dictCode = #{dictCode}
    </delete>

    <delete id="deleteDictDataByIds" parameterType="Long">
        delete from sys_dict_data where dict_code in
        <foreach collection="array" item="dictCode" open="(" separator="," close=")">
            #{dictCode}
        </foreach>
    </delete>

    <update id="updateDictData" parameterType="com.yaonie.intelligent.assessment.system.domain.entity.SysDictData">
        update sys_dict_data
        <set>
            <if test="dictSort != null">dict_sort = #{dictSort},</if>
            <if test="dictLabel != null and dictLabel != ''">dict_label = #{dictLabel},</if>
            <if test="dictValue != null and dictValue != ''">dict_value = #{dictValue},</if>
            <if test="dictType != null and dictType != ''">dict_type = #{dictType},</if>
            <if test="cssClass != null">css_class = #{cssClass},</if>
            <if test="listClass != null">list_class = #{listClass},</if>
            <if test="isDefault != null and isDefault != ''">is_default = #{isDefault},</if>
            <if test="status != null">status = #{status},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where dict_code = #{dictCode}
    </update>

    <update id="updateDictDataType" parameterType="String">
        update sys_dict_data
        set dictType = #{newDictType}
        where dictType = #{oldDictType}
    </update>

    <insert id="insertDictData" parameterType="com.yaonie.intelligent.assessment.system.domain.entity.SysDictData">
        insert into sys_dict_data(
        <if test="dictSort != null">dictSort,</if>
        <if test="dictLabel != null and dictLabel != ''">dictLabel,</if>
        <if test="dictValue != null and dictValue != ''">dictValue,</if>
        <if test="dictType != null and dictType != ''">dictType,</if>
        <if test="cssClass != null and cssClass != ''">cssClass,</if>
        <if test="listClass != null and listClass != ''">listClass,</if>
        <if test="isDefault != null and isDefault != ''">isDefault,</if>
        <if test="status != null">status,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">createBy,</if>
        createTime
        )values(
        <if test="dictSort != null">#{dictSort},</if>
        <if test="dictLabel != null and dictLabel != ''">#{dictLabel},</if>
        <if test="dictValue != null and dictValue != ''">#{dictValue},</if>
        <if test="dictType != null and dictType != ''">#{dictType},</if>
        <if test="cssClass != null and cssClass != ''">#{cssClass},</if>
        <if test="listClass != null and listClass != ''">#{listClass},</if>
        <if test="isDefault != null and isDefault != ''">#{isDefault},</if>
        <if test="status != null">#{status},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

</mapper>